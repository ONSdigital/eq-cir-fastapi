components:
  schemas:
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: "#/components/schemas/ValidationError"
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
        - loc
        - msg
        - type
      title: ValidationError
      type: object
info:
  description: Open api schema for CIR
  title: Collection Instrumentation Register
  version: 1.0.0
openapi: "2.0"
paths:
  /v1/ci_metadata:
    get:
      description:
        GET method that returns any metadata objects from Firestore that
        match the parameters passed.
      operationId: http_get_ci_metadata_v1_v1_ci_metadata_get
      parameters:
        - in: query
          name: form_type
          required: true
          schema:
            title: Form Type
            type: string
        - in: query
          name: language
          required: true
          schema:
            title: Language
            type: string
        - in: query
          name: status
          required: false
          schema:
            anyOf:
              - type: string
              - type: "null"
            title: Status
        - in: query
          name: survey_id
          required: true
          schema:
            title: Survey Id
            type: string
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      summary: Http Get Ci Metadata V1
  /v1/retrieve_collection_instrument:
    get:
      description: GET method that fetches a CI schema by it's survey_id, form_type and language.
      operationId: http-get-schema-ci-schema-v1
      parameters:
        - in: query
          name: survey_id
          type: string
          required: true
          x-example: "123"
          description: The survey ID of the CI
        - in: query
          name: form_type
          type: string
          required: true
          x-example: "0005"
          description: The form type of the CI
        - in: query
          name: language
          type: string
          required: true
          x-example: "en"
          description: The language of the CI
      responses:
        200:
          description: Successfully retrieved the CI schema. This is illustrated by returning the CI schema to the user.
          schema:
            type: object
            properties:
              language:
                type: string
              mime_type:
                type: string
              schema_version:
                type: string
              data_version:
                type: string
              survey_id:
                type: string
              form_type:
                type: string
              legal_basis:
                type: string
              title:
                type: string
              questionnaire_flow:
                type: object
              sections:
                type: array
              theme:
                type: string
              navigation:
                type: object
              metadata:
                type: array
              post_submission:
                type: object
              submission:
                type: object
        400:
          description: Bad request. This is triggered by when a bad request body is provided. The response will inform the user what required parameter they are missing from the request or what is incorrect with the value that they have provided.
          schema:
            $ref: "#/definitions/400_error_response"
        404:
          description: Bad request. This is triggered when there is no CI metadata or schema that matches the request provided.
          schema:
            $ref: "#/definitions/404_error_response"
        500:
          description: Internal error. This is triggered when something an unexpected error occurs on the server side.
          schema:
            $ref: "#/definitions/internal_error_response"
  /v2/retrieve_collection_instrument:
    get:
      description: GET method that fetches a CI schema by it's GUID.
      operationId: http-get-ci-schema-v2
      parameters:
        - in: query
          name: guid
          type: string
          required: true
          x-example: "428ae4d1-8e7f-4a9d-8bef-05a266bf81e7"
          description: The global unique ID of the CI Metadata to be fetched.
      responses:
        200:
          description: Successfully Queried a CI. This is illustrated with the returned response containing the schema of the CI.
          schema:
            type: object
            properties:
              language:
                type: string
              mime_type:
                type: string
              schema_version:
                type: string
              data_version:
                type: string
              survey_id:
                type: string
              form_type:
                type: string
              legal_basis:
                type: string
              title:
                type: string
              questionnaire_flow:
                type: object
              sections:
                type: array
              theme:
                type: string
              navigation:
                type: object
              metadata:
                type: array
              post_submission:
                type: object
              submission:
                type: object
              sds_schema:
                type: string
        400:
          description: Bad request. This is triggered by when a bad request body is provided. The response will inform the user what required parameter they are missing from the request.
          schema:
            $ref: "#/definitions/key_error_response"
        404:
          description: Bad request. This is triggered when there is no CI schema that matches the request provided.
          schema:
            $ref: "#/definitions/404_error_response"
          examples:
            application/json:
              status: "error"
              message: "No CI schema found for {guid}"
        500:
          description: Internal error. This is triggered when something an unexpected error occurs on the server side.
          schema:
            $ref: "#/definitions/internal_error_response"
  /v1/update_status:
    put:
      description: PUT method that sets the status of a CI's metadata in Firestore to 'PUBLISH'.
      operationId: http-put-status-v1
      parameters:
        - in: query
          name: guid
          type: string
          required: true
          x-example: "428ae4d1-8e7f-4a9d-8bef-05a266bf81e7"
          description: The global unique ID of the CI Metadata to be updated to 'PUBLISH'.
      responses:
        200:
          description: Successfully set CI status to PUBLISHED. This is illustrated by the response returning the GUID of the CI metadata that has been updated.
          examples:
            application/json: "CI status has been changed to Published for a048b0c4-5bcc-4455-8817-3259acd5f667."
        400:
          description: Bad request. This is triggered by when a bad request body is provided. The response will inform the user what required parameter they are missing from the request.
          schema:
            $ref: "#/definitions/400_error_response"
        404:
          description: Bad request. This is triggered when there is no CI data that matches the request provided.
          schema:
            $ref: "#/definitions/404_error_response"
          examples:
            application/json:
              status: "error"
              message: "No CI metadata found for {guid}"
        500:
          description: Internal error. This is triggered when something an unexpected error occurs on the server side.
          schema:
            $ref: "#/definitions/internal_error_response"

components:
  schemas:
    BadRequest:
      properties:
        message:
          title: Message
          type: string
        status:
          default: error
          title: Status
          type: string
      required:
      - message
      title: BadRequest
      type: object
    CiMetadata:
      description: Model for collection instrument metadata
      properties:
        ci_version:
          title: Ci Version
          type: integer
        data_version:
          title: Data Version
          type: string
        description:
          title: Description
          type: string
        form_type:
          title: Form Type
          type: string
        id:
          title: Id
          type: string
        language:
          title: Language
          type: string
        published_at:
          title: Published At
          type: string
        schema_version:
          title: Schema Version
          type: string
        sds_schema:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          title: Sds Schema
        status:
          title: Status
          type: string
        survey_id:
          title: Survey Id
          type: string
        title:
          title: Title
          type: string
      required:
      - ci_version
      - data_version
      - form_type
      - id
      - language
      - published_at
      - schema_version
      - status
      - survey_id
      - title
      - description
      title: CiMetadata
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    PostCiMetadataV1PostData:
      description: "\n    Model for `post_ci_metadata_v1` request post data\n\n  \
        \  This is the entire CI JSON object that you would like to publish. The example\
        \ below illustrates\n    the required attributes to put into the request body.\
        \ The POST will fail if these are not\n    included.\n    "
      properties:
        data_version:
          title: Data Version
          type: string
        description:
          title: Description
          type: string
        form_type:
          title: Form Type
          type: string
        language:
          title: Language
          type: string
        legal_basis:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          title: Legal Basis
        metadata:
          anyOf:
          - items: {}
            type: array
          - type: 'null'
          title: Metadata
        mime_type:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          title: Mime Type
        navigation:
          anyOf:
          - type: object
          - type: 'null'
          title: Navigation
        post_submission:
          anyOf:
          - type: object
          - type: 'null'
          title: Post Submission
        questionnaire_flow:
          anyOf:
          - type: object
          - type: 'null'
          title: Questionnaire Flow
        schema_version:
          title: Schema Version
          type: string
        sds_schema:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          title: Sds Schema
        sections:
          anyOf:
          - items: {}
            type: array
          - type: 'null'
          title: Sections
        submission:
          anyOf:
          - type: object
          - type: 'null'
          title: Submission
        survey_id:
          title: Survey Id
          type: string
        theme:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          title: Theme
        title:
          title: Title
          type: string
      required:
      - data_version
      - form_type
      - language
      - survey_id
      - title
      - schema_version
      - description
      title: PostCiMetadataV1PostData
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
info:
  description: Open api schema for CIR
  title: Collection Instrumentation Register
  version: 1.0.0
openapi: 3.1.0
paths:
  /v1/ci_metadata:
    get:
      description: GET method that returns any metadata objects from Firestore that
        match the parameters passed.
      operationId: http_get_ci_metadata_v1_v1_ci_metadata_get
      parameters:
      - description: The form type of the CI
        in: query
        name: form_type
        required: true
        schema:
          description: The form type of the CI
          examples:
          - '0005'
          title: Form Type
          type: string
      - description: The language of the CI
        in: query
        name: language
        required: true
        schema:
          description: The language of the CI
          examples:
          - en
          title: Language
          type: string
      - description: The survey ID of the CI
        in: query
        name: survey_id
        required: true
        schema:
          description: The survey ID of the CI
          examples:
          - '123'
          title: Survey Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CiMetadata'
          description: Successfully fetched the metadata of a CI. This is illustrated
            with the returned response containing the metadata of the CI.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request. This is triggered by when a bad request body is
            provided. The response will inform the user what required parameter they
            are missing from the request.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request. This is triggered when there is no CI data that
            matches the request provided.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          description: Internal error. This is triggered when something an unexpected
            error occurs on the server side.
      summary: Http Get Ci Metadata V1
  /v1/dev/teardown:
    delete:
      description: DELETE method that deletes the CI schema from the bucket as well
        as the CI metadata from Firestore.
      operationId: http_delete_ci_v1_v1_dev_teardown_delete
      parameters:
      - description: The survey ID of the CI to be deleted.
        in: query
        name: survey_id
        required: true
        schema:
          description: The survey ID of the CI to be deleted.
          examples:
          - '123'
          title: Survey Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successfully deleted a CI's schema and metadata. This is illustrated
            with the response informing the user of the survey_id that has been deleted.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request. This is triggered by when a bad request body is
            provided. The response will inform the user what required parameter they
            are missing from the request.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request. This is triggered when there is no CI data that
            matches the request provided.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          description: Internal error. This is triggered when something an unexpected
            error occurs on the server side.
      summary: Http Delete Ci V1
  /v1/publish_collection_instrument:
    post:
      description: 'POST method that creates a Collection Instrument. This will post
        the metadata to Firestore and

        the whole request body to a Google Cloud Bucket.'
      operationId: http_post_ci_metadata_v1_v1_publish_collection_instrument_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCiMetadataV1PostData'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CiMetadata'
          description: Successfully created a CI. This is illustrated with the returned
            response containing the metadata of the CI.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request. This is triggered by when a bad request body is
            provided. The response will inform the user what required parameter they
            are missing from the request.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          description: Internal error. This is triggered when something an unexpected
            error occurs on the server side.
      summary: Http Post Ci Metadata V1
  /v1/retrieve_collection_instrument:
    get:
      description: GET method that fetches a CI schema by it's survey_id, form_type
        and language.
      operationId: http_get_ci_schema_v1_v1_retrieve_collection_instrument_get
      parameters:
      - description: The form type of the CI
        in: query
        name: form_type
        required: true
        schema:
          description: The form type of the CI
          examples:
          - '0005'
          title: Form Type
          type: string
      - description: The language of the CI
        in: query
        name: language
        required: true
        schema:
          description: The language of the CI
          examples:
          - en
          title: Language
          type: string
      - description: The survey ID of the CI
        in: query
        name: survey_id
        required: true
        schema:
          description: The survey ID of the CI
          examples:
          - '123'
          title: Survey Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CiMetadata'
          description: Successfully retrieved the CI schema. This is illustrated by
            returning the CI schema to the user.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request. This is triggered by when a bad request body is
            provided. The response will inform the user what required parameter they
            are missing from the request.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request. This is triggered when there is no CI data that
            matches the request provided.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          description: Internal error. This is triggered when something an unexpected
            error occurs on the server side.
      summary: Http Get Ci Schema V1
  /v1/update_status:
    put:
      description: PUT method that sets the status of a CI's metadata in Firestore
        to 'PUBLISH'.
      operationId: http_put_status_v1_v1_update_status_put
      parameters:
      - description: The global unique ID of the CI Metadata to be updated to 'PUBLISH'.
        in: query
        name: guid
        required: true
        schema:
          description: The global unique ID of the CI Metadata to be updated to 'PUBLISH'.
          examples:
          - 428ae4d1-8e7f-4a9d-8bef-05a266bf81e7
          title: Guid
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CiMetadata'
          description: Successfully set CI status to PUBLISHED. This is illustrated
            by the response returning the GUID of the CI metadata that has been updated.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request. This is triggered by when a bad request body is
            provided. The response will inform the user what required parameter they
            are missing from the request.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request. This is triggered when there is no CI data that
            matches the request provided.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          description: Internal error. This is triggered when something an unexpected
            error occurs on the server side.
      summary: Http Put Status V1
  /v2/ci_metadata:
    get:
      description: 'GET method that returns any metadata objects from Firestore that
        match the parameters passed.

        The user has multiple ways of querying the metadata.

        1. Provide survey_id, form_type, language and status.

        2. Provide survey_id, form_type, language.

        3. Provide status.

        4. Provide no parameters.'
      operationId: http_get_ci_metadata_v2_v2_ci_metadata_get
      parameters:
      - description: form type to get
        in: query
        name: form_type
        required: false
        schema:
          description: form type to get
          examples:
          - '0005'
          title: Form Type
          type: string
      - description: language to get
        in: query
        name: language
        required: false
        schema:
          description: language to get
          examples:
          - en
          title: Language
          type: string
      - description: status to get
        in: query
        name: status
        required: false
        schema:
          description: status to get
          examples:
          - draft
          title: Status
          type: string
      - description: survey id to get
        in: query
        name: survey_id
        required: false
        schema:
          description: survey id to get
          examples:
          - '123'
          title: Survey Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CiMetadata'
          description: Successfully Queried a CI
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request. This is triggered by when a bad request body is
            provided. The response will inform the user what required parameter they
            are missing from the request.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request. This is triggered when there is no CI data that
            matches the request provided.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          description: Internal error. This is triggered when something an unexpected
            error occurs on the server side.
      summary: Http Get Ci Metadata V2
  /v2/retrieve_collection_instrument:
    get:
      description: GET method that fetches a CI schema by it's GUID.
      operationId: http_get_ci_schema_v2_v2_retrieve_collection_instrument_get
      parameters:
      - description: The form type of the CI
        in: query
        name: guid
        required: true
        schema:
          description: The form type of the CI
          examples:
          - '123578'
          title: Guid
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CiMetadata'
          description: Successfully Queried a CI. This is illustrated with the returned
            response containing the schema of the CI.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request. This is triggered by when a bad request body is
            provided. The response will inform the user what required parameter they
            are missing from the request.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
          description: Bad request. This is triggered when there is no CI data that
            matches the request provided.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        '500':
          description: Internal error. This is triggered when something an unexpected
            error occurs on the server side.
      summary: Http Get Ci Schema V2
